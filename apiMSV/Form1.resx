<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAADwAAAA8CAYAAAA6/NlyAAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAO
        wQAADsEBuJFr7QAABBJJREFUaEPtm1tIFFEYx5d6iKiHCnqMgh66gCR0gxKMCISglCAKglCLsqQstTIR
        K4zSEqweBKEeki6SD1pUUGFGgpmiKZQaiaVlec0bST2d/G9ndGf3+3Znz5yB3bUf/Jed2XO+Pb+d2TML
        c9blikoUVOKPXxfniitEdX2bGB77JUIdjBFjxZgxdsrJHe8d0btzxbu2LlkmfIEDXLz9TML4dCINOHk6
        TgmfL66UTSKPEwX3zMI49JHO1OmNh0j4zgYCjm7hhLQbcpcvlS+bxJbkfLFg09HpUyJEgzHC5UvPoBy9
        L3jdxX13IUsVDvVAnJOGq+tVQ7vcNIMjSxUMh3BnLVxd3I8KqlC4BEeZAq4u+dwHqlA4heO/sAFVxDML
        N6eKlLzbIjHnppi/MYVsoytbDxSIjMIyEbUrh3ydCoeSMC7ivYOjsqUQnd/6xeqEbLKt3dx5XCvf5R/p
        V++T7bzDoSTc9d132h8YHtcu/bC6SVY3E7P/EtneMxxBC6+Kz5YtfNEpzcmCvJJHZB/PcCgd4Ynff2Qr
        X/p/jomVO8+S/aymoqpRVqPZc6qY7OcZDiXhfVklshVN39CosnQg2SevW8h+3uFQEkYwQ/ujf1J6xY4s
        si+V2dHJfk9jUFXXKuasPUj29w6HsjCiS9qKbE3jR8uyCIctYcSutFXZuesPkf25cNgWRlSlnZJFOLQI
        I8FKOymLcGgTRqxIL99+2nFZhEOrMBJI+sfAiHjx5oPcorEri3BoF0YCSftDhyzC4YgwoiKtSxbhcEwY
        CUZapyzC4agwcuRiqazI0/C+U6sswuGo8Kw1SaL8eb2syIOJDLM3VUM1HI4JW5U10C3N4YhwsLIGOqU5
        tAuryhrokubQKmxFFrNxZmGZ3KLRIc2hTdiqrDEbp+XflXtp7EpzaBEOVtaIk9IctoVVZY1YkV4al0H2
        9RcOW8JWZOtaOgL+qAgk/bV3KGhpDmVhq7LzNhwm+3tHtzSHkrBuWSM6pTmUhItKn8lWNCqyRgJJd3T3
        WarNEbTw4thjsgWNHVkjgaRPXvFYlcOEI2jhJdvSZQtfdMga8Sd9pugB2cczHEqndNXbVtlqmtrmT9pv
        m2ZdK5fVp8FtHivXZg4l4UUxqeJpTYtsKSYnsAbH7hEn596S7yLct2hjky6T7bzDoSRsBPePlsVlkq/p
        DD7MdXsvkK9x4bAlHMrh+C9sQBUJp3DMPOGR8Qn51AxVJFzCLUyD68xbesgtLsXSA6pYqAdH93PPgLQw
        415c6m/5MKRxoUcRqngoBWPEnzs4WeBePozGze3dclfkAkf3h4OHGfcXAGRG/ckjkqVNsohpYzI49JHw
        nYbD1GnsGZ8dMpjRcMRx7eJ+nIQSGCPGijG7Z2PCyRWVKP4CtDvWIYLMk30AAAAASUVORK5CYII=
</value>
  </data>
</root>