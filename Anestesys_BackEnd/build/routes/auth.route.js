"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const express_1 = require("express");
const auth_controller_1 = require("../controllers/auth.controller");
const requireRefreshToken_1 = require("../middlewares/requireRefreshToken");
const validationManager_1 = require("../middlewares/validationManager");
const router = (0, express_1.Router)();
router.post("/login", validationManager_1.bodyLoginValidator, auth_controller_1.login);
router.post("/register", validationManager_1.bodyRegisterValidator, auth_controller_1.register);
router.put('/updateMed/:id', requireRefreshToken_1.requireRefreshToken, auth_controller_1.updateMedico);
router.put('/preTuto/:id', requireRefreshToken_1.requireRefreshToken, auth_controller_1.updateValorTutorialPre);
router.put('/transTuto/:id', requireRefreshToken_1.requireRefreshToken, auth_controller_1.updateValorTutorialTrans);
router.put('/postTuto/:id', requireRefreshToken_1.requireRefreshToken, auth_controller_1.updateValorTutorialPost);
router.put('/password/:id', requireRefreshToken_1.requireRefreshToken, auth_controller_1.updateContrasena);
router.put('/updtCrjn/:id', requireRefreshToken_1.requireRefreshToken, auth_controller_1.updateCirujano);
router.get('/lstCrjn/:id', requireRefreshToken_1.requireRefreshToken, auth_controller_1.listCirujanos);
router.delete('/dltCrjn/:id', requireRefreshToken_1.requireRefreshToken, auth_controller_1.deleteCirujano);
router.put('/updtAnestVPA/:id', requireRefreshToken_1.requireRefreshToken, auth_controller_1.updateAnestVPA);
router.get('/lstAnestVPA/:id', requireRefreshToken_1.requireRefreshToken, auth_controller_1.listanestVPA);
router.delete('/dltAnestVPA/:id', requireRefreshToken_1.requireRefreshToken, auth_controller_1.deleteanestVPA);
router.put('/updtResAnest/:id', requireRefreshToken_1.requireRefreshToken, auth_controller_1.updateResAnest);
router.get('/lstResAnest/:id', requireRefreshToken_1.requireRefreshToken, auth_controller_1.listaresAnest);
router.delete('/dltResAnest/:id', requireRefreshToken_1.requireRefreshToken, auth_controller_1.deleteresAnest);
router.post('/logout', auth_controller_1.logout);
router.get('/refresh', requireRefreshToken_1.requireRefreshToken, auth_controller_1.refreshToken);
exports.default = router;
